package Advanced_Java.Part_08.Annotations.additional.suppresswarnings;

/**
 * Аннотация @SuppressWarnings используется для подавления предупреждений компилятора о конкретных предупреждениях в
 * данном блоке кода.
 * Это может быть полезно, когда вы уверены в безопасности операций, которые вызывают предупреждения.
 */

/**
 * Аннотация @SuppressWarnings в Java используется для подавления определенных предупреждений, которые генерирует
 * компилятор. Эта аннотация помогает управлять предупреждениями в коде, особенно когда вы уверены,
 * что предупреждаемые сценарии не представляют проблем или когда вы хотите временно игнорировать некоторые
 * предупреждения.
 */

public class Example {
    // Подавление предупреждения о неиспользуемом коде

    /**
     * "unused" указывает компилятору игнорировать предупреждения о неиспользуемых элементах, таких как переменные,
     * методы или параметры, которые никогда не используются в коде. Это может быть полезно,
     * когда переменная или метод были добавлены для будущего использования, но в текущей версии кода они
     * не используются, и вы не хотите видеть предупреждения о них.
     */
    @SuppressWarnings("unused")
    public void myMethod() {
        int unusedVariable = 10;
    }

    // Подавление предупреждений о неиспользуемом и сыром (raw) использовании

    /**
     * В этом случае аннотация подавляет два типа предупреждений:
     * "unused" подавляет предупреждения о неиспользуемых элементах, как и в предыдущем примере.
     * "rawtypes" подавляет предупреждения, связанные с использованием не параметризованных типов (сырых типов).
     * В Java обобщения (generics) введены для обеспечения более строгой типизации при работе с коллекциями
     * и другими типами данных. Когда вы используете коллекцию без указания типа ее элементов,
     * компилятор генерирует предупреждение о "сыром" использовании, поскольку это может привести к
     * проблемам с типобезопасностью. Подавление "rawtypes" позволяет игнорировать эти предупреждения,
     * что может быть полезно при работе с устаревшим кодом, где обобщения не используются.
     */
    @SuppressWarnings({"unused", "rawtypes"})
    public void anotherMethod() {
        java.util.List myList = new java.util.ArrayList(); // в вызове типа List, cлева, нет указания типа - сырой тип
        //java.util.List<String> myList = new java.util.ArrayList<>();
    }
}
